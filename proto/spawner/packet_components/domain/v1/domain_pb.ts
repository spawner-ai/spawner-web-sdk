// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file spawner/packet_components/domain/v1/domain.proto (package spawner.packet_components.domain.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file spawner/packet_components/domain/v1/domain.proto.
 */
export const file_spawner_packet_components_domain_v1_domain: GenFile = /*@__PURE__*/
  fileDesc("CjBzcGF3bmVyL3BhY2tldF9jb21wb25lbnRzL2RvbWFpbi92MS9kb21haW4ucHJvdG8SI3NwYXduZXIucGFja2V0X2NvbXBvbmVudHMuZG9tYWluLnYxIi8KDERvbWFpbkFjdGlvbhIKCgJpZBgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCSKPAQoMRG9tYWluT2JqZWN0EgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSDAoEdHlwZRgDIAEoCRITCgtkZXNjcmlwdGlvbhgEIAEoCRJCCgdhY3Rpb25zGAUgAygLMjEuc3Bhd25lci5wYWNrZXRfY29tcG9uZW50cy5kb21haW4udjEuRG9tYWluQWN0aW9uIicKEERvbWFpbkNvbnN0cmFpbnQSEwoLZGVzY3JpcHRpb24YASABKAki3AEKBkRvbWFpbhJCCgdhY3Rpb25zGAEgAygLMjEuc3Bhd25lci5wYWNrZXRfY29tcG9uZW50cy5kb21haW4udjEuRG9tYWluQWN0aW9uEkoKC2NvbnN0cmFpbnRzGAIgAygLMjUuc3Bhd25lci5wYWNrZXRfY29tcG9uZW50cy5kb21haW4udjEuRG9tYWluQ29uc3RyYWludBJCCgdvYmplY3RzGAMgAygLMjEuc3Bhd25lci5wYWNrZXRfY29tcG9uZW50cy5kb21haW4udjEuRG9tYWluT2JqZWN0QuEBCidjb20uc3Bhd25lci5wYWNrZXRfY29tcG9uZW50cy5kb21haW4udjFCC0RvbWFpblByb3RvUAGiAgNTUESqAiJTcGF3bmVyLlBhY2tldENvbXBvbmVudHMuRG9tYWluLlYxygIiU3Bhd25lclxQYWNrZXRDb21wb25lbnRzXERvbWFpblxWMeICLlNwYXduZXJcUGFja2V0Q29tcG9uZW50c1xEb21haW5cVjFcR1BCTWV0YWRhdGHqAiVTcGF3bmVyOjpQYWNrZXRDb21wb25lbnRzOjpEb21haW46OlYxYgZwcm90bzM");

/**
 * Represents a possible action in the environment. An action may be selected by
 * the agent.
 *
 * @generated from message spawner.packet_components.domain.v1.DomainAction
 */
export type DomainAction = Message<"spawner.packet_components.domain.v1.DomainAction"> & {
  /**
   * Required. A unique identifier for the action. The API will return this
   * value when the action is selected.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required. A description of the action provided by the object. The
   * description must be from the viewpoint of the agent.
   *
   * Examples:
   * - "Pull the lever. It seems it may open the door near the staircase."
   * - "Talk to Sam. Sam is wearing a black baseball cap with an emoji on it."
   *
   * @generated from field: string description = 2;
   */
  description: string;
};

/**
 * Describes the message spawner.packet_components.domain.v1.DomainAction.
 * Use `create(DomainActionSchema)` to create a new message.
 */
export const DomainActionSchema: GenMessage<DomainAction> = /*@__PURE__*/
  messageDesc(file_spawner_packet_components_domain_v1_domain, 0);

/**
 * @generated from message spawner.packet_components.domain.v1.DomainObject
 */
export type DomainObject = Message<"spawner.packet_components.domain.v1.DomainObject"> & {
  /**
   * Required. A unique identifier for the object in the environment.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required. The name of the object.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Required. Indicates the type of the object. It may be implemented as enum
   * on client-side to preserve consistency.
   *
   * Examples:
   * - Types may be high-level: "object", "character", etc.
   * - Types may be granular: "furniture", "tool", etc.
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * Required. A description of the object. It may help to hint the agent on how
   * the agent may be able to interact with the object.
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * Represents the affordances of the object. The client should have
   * functionality to handle when the agent interacts the the object given the
   * provided affordance.
   *
   * @generated from field: repeated spawner.packet_components.domain.v1.DomainAction actions = 5;
   */
  actions: DomainAction[];
};

/**
 * Describes the message spawner.packet_components.domain.v1.DomainObject.
 * Use `create(DomainObjectSchema)` to create a new message.
 */
export const DomainObjectSchema: GenMessage<DomainObject> = /*@__PURE__*/
  messageDesc(file_spawner_packet_components_domain_v1_domain, 1);

/**
 * Represents constraints that exist within the environment. For example, the
 * agent should know that there is no escape from the room, etc.
 *
 * @generated from message spawner.packet_components.domain.v1.DomainConstraint
 */
export type DomainConstraint = Message<"spawner.packet_components.domain.v1.DomainConstraint"> & {
  /**
   * Required. Description of the contraint.
   *
   * @generated from field: string description = 1;
   */
  description: string;
};

/**
 * Describes the message spawner.packet_components.domain.v1.DomainConstraint.
 * Use `create(DomainConstraintSchema)` to create a new message.
 */
export const DomainConstraintSchema: GenMessage<DomainConstraint> = /*@__PURE__*/
  messageDesc(file_spawner_packet_components_domain_v1_domain, 2);

/**
 * Represents a domain in the environment. A domain indicates the action space
 * of the agent, which depends on the agent's surrounding environment. The
 * domain may be updated frequently.
 *
 * Possible actions are defined on the objects and environment. The agent may
 * select from possible actions (as defined by the client). This provides the
 * client flexibility in defining actions. For example, there may be a "cash
 * register" object that provides the action to "open cash register" only if the
 * agent has the permission. These conditional cases can be handled by passing
 * different action fields depending on the agent.
 *
 * @generated from message spawner.packet_components.domain.v1.Domain
 */
export type Domain = Message<"spawner.packet_components.domain.v1.Domain"> & {
  /**
   * Indicates the general afforances of the domain, not for any specific
   * object. For example, the agent may be able to "walk to the city gates".
   *
   * @generated from field: repeated spawner.packet_components.domain.v1.DomainAction actions = 1;
   */
  actions: DomainAction[];

  /**
   * Indicates constraints in the domain.
   *
   * @generated from field: repeated spawner.packet_components.domain.v1.DomainConstraint constraints = 2;
   */
  constraints: DomainConstraint[];

  /**
   * Indicates the objects the aagent may interacted with. Each object has
   * actions, which the agent may select.
   *
   * @generated from field: repeated spawner.packet_components.domain.v1.DomainObject objects = 3;
   */
  objects: DomainObject[];
};

/**
 * Describes the message spawner.packet_components.domain.v1.Domain.
 * Use `create(DomainSchema)` to create a new message.
 */
export const DomainSchema: GenMessage<Domain> = /*@__PURE__*/
  messageDesc(file_spawner_packet_components_domain_v1_domain, 3);

