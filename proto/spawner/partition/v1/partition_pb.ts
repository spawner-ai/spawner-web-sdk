// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file spawner/partition/v1/partition.proto (package spawner.partition.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file spawner/partition/v1/partition.proto.
 */
export const file_spawner_partition_v1_partition: GenFile = /*@__PURE__*/
  fileDesc("CiRzcGF3bmVyL3BhcnRpdGlvbi92MS9wYXJ0aXRpb24ucHJvdG8SFHNwYXduZXIucGFydGl0aW9uLnYxIkoKEVBhcnRpdGlvbkxvY2F0aW9uEgoKAmlkGAEgASgJEhQKDGRpc3BsYXlfbmFtZRgCIAEoCRITCgtkZXNjcmlwdGlvbhgDIAEoCSIcCg5QYXJ0aXRpb25BZ2VudBIKCgJpZBgBIAEoCSJ9CglQYXJ0aXRpb24SOgoJbG9jYXRpb25zGAEgAygLMicuc3Bhd25lci5wYXJ0aXRpb24udjEuUGFydGl0aW9uTG9jYXRpb24SNAoGYWdlbnRzGAIgAygLMiQuc3Bhd25lci5wYXJ0aXRpb24udjEuUGFydGl0aW9uQWdlbnRCnAEKGGNvbS5zcGF3bmVyLnBhcnRpdGlvbi52MUIOUGFydGl0aW9uUHJvdG9QAaICA1NQWKoCFFNwYXduZXIuUGFydGl0aW9uLlYxygIUU3Bhd25lclxQYXJ0aXRpb25cVjHiAiBTcGF3bmVyXFBhcnRpdGlvblxWMVxHUEJNZXRhZGF0YeoCFlNwYXduZXI6OlBhcnRpdGlvbjo6VjFiBnByb3RvMw");

/**
 * @generated from message spawner.partition.v1.PartitionLocation
 */
export type PartitionLocation = Message<"spawner.partition.v1.PartitionLocation"> & {
  /**
   * The unique id for a location entity. Should be unique within a world.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Name of the location. Unique names are preferrable.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;
};

/**
 * Describes the message spawner.partition.v1.PartitionLocation.
 * Use `create(PartitionLocationSchema)` to create a new message.
 */
export const PartitionLocationSchema: GenMessage<PartitionLocation> = /*@__PURE__*/
  messageDesc(file_spawner_partition_v1_partition, 0);

/**
 * PartitionAgent represents an agent within the world partition. For example,
 * for a planning request, the PartitionAgent represents the pool of other
 * agents the target agent may decide to interact with.
 *
 * @generated from message spawner.partition.v1.PartitionAgent
 */
export type PartitionAgent = Message<"spawner.partition.v1.PartitionAgent"> & {
  /**
   * Indicates the agent id.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message spawner.partition.v1.PartitionAgent.
 * Use `create(PartitionAgentSchema)` to create a new message.
 */
export const PartitionAgentSchema: GenMessage<PartitionAgent> = /*@__PURE__*/
  messageDesc(file_spawner_partition_v1_partition, 1);

/**
 * @generated from message spawner.partition.v1.Partition
 */
export type Partition = Message<"spawner.partition.v1.Partition"> & {
  /**
   * @generated from field: repeated spawner.partition.v1.PartitionLocation locations = 1;
   */
  locations: PartitionLocation[];

  /**
   * @generated from field: repeated spawner.partition.v1.PartitionAgent agents = 2;
   */
  agents: PartitionAgent[];
};

/**
 * Describes the message spawner.partition.v1.Partition.
 * Use `create(PartitionSchema)` to create a new message.
 */
export const PartitionSchema: GenMessage<Partition> = /*@__PURE__*/
  messageDesc(file_spawner_partition_v1_partition, 2);

