// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file spawner/knowledge/v1/knowledge.proto (package spawner.knowledge.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file spawner/knowledge/v1/knowledge.proto.
 */
export const file_spawner_knowledge_v1_knowledge: GenFile = /*@__PURE__*/
  fileDesc("CiRzcGF3bmVyL2tub3dsZWRnZS92MS9rbm93bGVkZ2UucHJvdG8SFHNwYXduZXIua25vd2xlZGdlLnYxIlcKD0tub3dsZWRnZVNvdXJjZRI3CgR0eXBlGAEgASgOMikuc3Bhd25lci5rbm93bGVkZ2UudjEuS25vd2xlZGdlU291cmNlVHlwZRILCgN1cmkYAiABKAkiWQoSS25vd2xlZGdlUmVmZXJlbmNlEgwKBG5hbWUYASABKAkSNQoGc291cmNlGAIgASgLMiUuc3Bhd25lci5rbm93bGVkZ2UudjEuS25vd2xlZGdlU291cmNlImQKDktub3dsZWRnZUV2ZW50EhQKDHV0dGVyYW5jZV9pZBgBIAEoCRI8CgpyZWZlcmVuY2VzGAIgAygLMiguc3Bhd25lci5rbm93bGVkZ2UudjEuS25vd2xlZGdlUmVmZXJlbmNlKn0KE0tub3dsZWRnZVNvdXJjZVR5cGUSJQohS05PV0xFREdFX1NPVVJDRV9UWVBFX1VOU1BFQ0lGSUVEEAASIAocS05PV0xFREdFX1NPVVJDRV9UWVBFX01BTlVBTBABEh0KGUtOT1dMRURHRV9TT1VSQ0VfVFlQRV9XRUIQAkKcAQoYY29tLnNwYXduZXIua25vd2xlZGdlLnYxQg5Lbm93bGVkZ2VQcm90b1ABogIDU0tYqgIUU3Bhd25lci5Lbm93bGVkZ2UuVjHKAhRTcGF3bmVyXEtub3dsZWRnZVxWMeICIFNwYXduZXJcS25vd2xlZGdlXFYxXEdQQk1ldGFkYXRh6gIWU3Bhd25lcjo6S25vd2xlZGdlOjpWMWIGcHJvdG8z");

/**
 * @generated from message spawner.knowledge.v1.KnowledgeSource
 */
export type KnowledgeSource = Message<"spawner.knowledge.v1.KnowledgeSource"> & {
  /**
   * @generated from field: spawner.knowledge.v1.KnowledgeSourceType type = 1;
   */
  type: KnowledgeSourceType;

  /**
   * The URI of the item source. The URI is usually set for
   * the 'WEB' source type, to allow the client to places
   * links to its source.
   *
   * Assume empty for source types other than 'WEB'.
   *
   * @generated from field: string uri = 2;
   */
  uri: string;
};

/**
 * Describes the message spawner.knowledge.v1.KnowledgeSource.
 * Use `create(KnowledgeSourceSchema)` to create a new message.
 */
export const KnowledgeSourceSchema: GenMessage<KnowledgeSource> = /*@__PURE__*/
  messageDesc(file_spawner_knowledge_v1_knowledge, 0);

/**
 * @generated from message spawner.knowledge.v1.KnowledgeReference
 */
export type KnowledgeReference = Message<"spawner.knowledge.v1.KnowledgeReference"> & {
  /**
   * Output only. Relative resource path.
   * Format: `workspaces:{workspace_id}:knowledge:{knowledge_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Indicates the source of knowledge.
   *
   * @generated from field: spawner.knowledge.v1.KnowledgeSource source = 2;
   */
  source?: KnowledgeSource;
};

/**
 * Describes the message spawner.knowledge.v1.KnowledgeReference.
 * Use `create(KnowledgeReferenceSchema)` to create a new message.
 */
export const KnowledgeReferenceSchema: GenMessage<KnowledgeReference> = /*@__PURE__*/
  messageDesc(file_spawner_knowledge_v1_knowledge, 1);

/**
 * @generated from message spawner.knowledge.v1.KnowledgeEvent
 */
export type KnowledgeEvent = Message<"spawner.knowledge.v1.KnowledgeEvent"> & {
  /**
   * Identifies a grouping of multiple packages.
   *
   * @generated from field: string utterance_id = 1;
   */
  utteranceId: string;

  /**
   * Indicates the knowledge referenced.
   *
   * @generated from field: repeated spawner.knowledge.v1.KnowledgeReference references = 2;
   */
  references: KnowledgeReference[];
};

/**
 * Describes the message spawner.knowledge.v1.KnowledgeEvent.
 * Use `create(KnowledgeEventSchema)` to create a new message.
 */
export const KnowledgeEventSchema: GenMessage<KnowledgeEvent> = /*@__PURE__*/
  messageDesc(file_spawner_knowledge_v1_knowledge, 2);

/**
 * @generated from enum spawner.knowledge.v1.KnowledgeSourceType
 */
export enum KnowledgeSourceType {
  /**
   * @generated from enum value: KNOWLEDGE_SOURCE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Manually added from the console.
   *
   * @generated from enum value: KNOWLEDGE_SOURCE_TYPE_MANUAL = 1;
   */
  MANUAL = 1,

  /**
   * Added by scraping websites using Spawner spider.
   *
   * @generated from enum value: KNOWLEDGE_SOURCE_TYPE_WEB = 2;
   */
  WEB = 2,
}

/**
 * Describes the enum spawner.knowledge.v1.KnowledgeSourceType.
 */
export const KnowledgeSourceTypeSchema: GenEnum<KnowledgeSourceType> = /*@__PURE__*/
  enumDesc(file_spawner_knowledge_v1_knowledge, 0);

